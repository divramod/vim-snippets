# This file contains snippets that are always defined. I personally
# have snippets for signatures and often needed texts

# sligthly lower priority than everything else since specialized versions
# should overwrite. The user needs to adjust her priority in her snippets to
# ~-55 so that other filetypes will still overwrite.
priority -60

snippet b "#!/bin/bash" w
#!/bin/bash
endsnippet

snippet d0 "today" w
# `env LC_ALL=en_US.utf8 date "+%Y.%m.%d %A"`
endsnippet

snippet d1 "tomorrow" w
# `env LC_ALL=en_US.utf8 date --date="tomorrow" "+%Y.%m.%d %A"`
endsnippet

snippet d2 "day: +2" w
# `env LC_ALL=en_US.utf8 date --date="2 day" "+%Y.%m.%d %A"`
endsnippet

snippet dm1 "day: -1" w
# `env LC_ALL=en_US.utf8 date --date="1 day ago" "+%Y.%m.%d %A"`
endsnippet

snippet dm2 "day: -2" w
# `env LC_ALL=en_US.utf8 date --date="2 day ago" "+%Y.%m.%d %A"`
endsnippet


##############
# NICE BOXES #
##############
global !p
from vimsnippets import foldmarker, make_box, get_comment_format
endglobal

snippet date "YYYY.MM.DD" w
`!v strftime("%Y.%m.%d")`
endsnippet

snippet ddate "Month DD, YYYY" w
`!v strftime("%b %d, %Y")`
endsnippet

snippet diso "ISO format datetime" w
`!v strftime("%Y-%m-%d %H:%M:%S%z")`
endsnippet

snippet time "hh:mm" w
`!v strftime("%H:%M")`
endsnippet

snippet datetime "YYYY-MM-DD hh:mm" w
`!v strftime("%Y-%m-%d %H:%M")`
endsnippet

snippet todo "TODO comment" bw
`!p snip.rv=get_comment_format()[0]` ${2:TODO}: $0${3: <${4:`!v strftime('%d-%m-%y')`}${5:, `!v g:snips_author`}>} `!p snip.rv=get_comment_format()[2]`
endsnippet

##########
#  Misc  #
##########
snippet uuid "Random UUID" w
`!p if not snip.c: import uuid; snip.rv = uuid.uuid4()`
endsnippet

# vim:ft=snippets:
